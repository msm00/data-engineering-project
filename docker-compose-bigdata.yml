version: '3'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"
      - "8020:8020"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - CORE_CONF_hadoop_http_staticuser_user=root
      - HDFS_CONF_dfs_namenode_name_dir=file:///hadoop/dfs/name
      - HDFS_CONF_dfs_replication=1
    networks:
      - hadoop-network

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    hostname: datanode
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      - ./data:/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - HDFS_CONF_dfs_datanode_data_dir=file:///hadoop/dfs/data
      - SERVICE_PRECONDITION=namenode:9870
    networks:
      - hadoop-network

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    hostname: resourcemanager
    depends_on:
      - namenode
    ports:
      - "8088:8088"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - SERVICE_PRECONDITION=namenode:9870
    networks:
      - hadoop-network

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    hostname: nodemanager
    depends_on:
      - resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - SERVICE_PRECONDITION=resourcemanager:8088
    networks:
      - hadoop-network

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    hostname: historyserver
    depends_on:
      - namenode
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - YARN_CONF_yarn_timeline-service_hostname=historyserver
      - SERVICE_PRECONDITION=resourcemanager:8088
    ports:
      - "8188:8188"
    networks:
      - hadoop-network

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    hostname: hive-server
    depends_on:
      - namenode
      - datanode
      - hive-metastore
    ports:
      - "10000:10000"
      - "10002:10002"
    environment:
      - HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore/metastore
      - SERVICE_PRECONDITION=hive-metastore:9083
    networks:
      - hadoop-network

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    hostname: hive-metastore
    depends_on:
      - namenode
      - datanode
      - hive-metastore-postgresql
    ports:
      - "9083:9083"
    environment:
      - SERVICE_PRECONDITION=namenode:9870 hive-metastore-postgresql:5432
    command: /opt/hive/bin/hive --service metastore
    networks:
      - hadoop-network

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    hostname: hive-metastore-postgresql
    volumes:
      - hive-metastore-postgresql:/var/lib/postgresql/data
    networks:
      - hadoop-network

  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    hostname: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - SPARK_MASTER_HOST=spark-master
      - SPARK_CONF_spark_eventLog_enabled=true
      - SPARK_CONF_spark_eventLog_dir=hdfs://namenode:8020/spark-logs
      - SPARK_CONF_spark_history_fs_logDirectory=hdfs://namenode:8020/spark-logs
    volumes:
      - ./data:/data
      - ./examples:/examples
    networks:
      - hadoop-network

  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker
    hostname: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
    volumes:
      - ./data:/data
      - ./examples:/examples
    networks:
      - hadoop-network

  spark-history-server:
    image: bde2020/spark-history-server:3.1.1-hadoop3.2
    container_name: spark-history-server
    hostname: spark-history-server
    depends_on:
      - spark-master
    ports:
      - "18080:18080"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - SPARK_HISTORY_OPTS=-Dspark.history.fs.logDirectory=hdfs://namenode:8020/spark-logs
    networks:
      - hadoop-network

  hue:
    image: gethue/hue:latest
    container_name: hue
    hostname: hue
    depends_on:
      - namenode
      - hive-server
    ports:
      - "8889:8888"
    environment:
      - NAMENODE_HOST=namenode
      - HIVE_HOST=hive-server
    volumes:
      - hue-config:/etc/hue
    networks:
      - hadoop-network

  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    hostname: jupyter
    ports:
      - "8890:8888"
    environment:
      - SPARK_OPTS="--master=spark://spark-master:7077 --driver-memory=1G --executor-memory=1G --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.1.1"
    volumes:
      - ./data:/home/jovyan/data
      - ./examples:/home/jovyan/examples
    networks:
      - hadoop-network

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  hive-metastore-postgresql:
  hue-config:


networks:
  hadoop-network:
    driver: bridge
